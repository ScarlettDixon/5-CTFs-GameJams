./config/auth_ldap.config.php://$conf['auth']['ldap']['bindpw']   = 'mysecretbindpassword';
./dcm.php:// be careful as this currently does not require a password.
./include/js/global.js:        case "password":
./include/adodb5/datadict/datadict-oci8.inc.php:		$password = isset($options['PASSWORD']) ? $options['PASSWORD'] : 'tiger';
./include/adodb5/datadict/datadict-oci8.inc.php:		$sql[] = "CREATE USER ".$dbname." IDENTIFIED BY ".$password.$tablespace;
./include/adodb5/README.md:$db->Connect($server, $user, $password, $database);
./include/adodb5/drivers/adodb-postgres64.inc.php:	// 	$db->Connect("host=host1 user=user1 password=secret port=4341");
./include/adodb5/drivers/adodb-postgres64.inc.php:			if ($pwd)  $str .= " password=".$pwd;
./include/adodb5/drivers/adodb-postgres64.inc.php:		//if ($user) $linea = "user=$user host=$linea password=$pwd dbname=$db port=5432";
./include/adodb5/drivers/adodb-postgres64.inc.php:	// 	$db->PConnect("host=host1 user=user1 password=secret port=4341");
./include/adodb5/drivers/adodb-ldap.inc.php:	var $password = false;
./include/adodb5/drivers/adodb-ldap.inc.php:	function _connect( $host, $username, $password, $ldapbase)
./include/adodb5/drivers/adodb-ldap.inc.php:			$bind = @ldap_bind( $this->_connectionID, $username, $password );
./include/adodb5/tohtml.inc.php://	$db->Connect('mysql','userid','password','database');
./include/adodb5/adodb-pear.inc.php:		if($persist) $ok = $obj->PConnect($dsninfo['hostspec'], $dsninfo['username'],$dsninfo['password'],$dsninfo['database']);
./include/adodb5/adodb-pear.inc.php:		else  $ok = $obj->Connect($dsninfo['hostspec'], $dsninfo['username'],$dsninfo['password'],$dsninfo['database']);
./include/adodb5/adodb-pear.inc.php:	 *  password: Password for login
./include/adodb5/adodb-pear.inc.php:	 *  phptype(dbsyntax)://username:password@protocol+hostspec/database
./include/adodb5/adodb-pear.inc.php:	 *  phptype://username:password@protocol+hostspec:110//usr/db_file.db
./include/adodb5/adodb-pear.inc.php:	 *  phptype://username:password@hostspec/database_name
./include/adodb5/adodb-pear.inc.php:	 *  phptype://username:password@hostspec
./include/adodb5/adodb-pear.inc.php:			'password' => false
./include/adodb5/adodb-pear.inc.php:		// Get (if found): username and password
./include/adodb5/adodb-pear.inc.php:		// $dsn => username:password@protocol+hostspec/database
./include/adodb5/adodb-pear.inc.php:				$parsed['password'] = urldecode(substr($str, $pos + 1));
./include/adodb5/adodb.inc.php:	var $password = '';			/// Password for the username. For security, we no longer store it.
./include/adodb5/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb5/adodb.inc.php:			$this->password = 'not stored'; // not stored for security reasons
./include/adodb5/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb5/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb5/adodb.inc.php:			$this->password = 'not stored';
./include/adodb5/adodb.inc.php:	 *  password: Password for login
./include/adodb/datadict/datadict-oci8.inc.php:		$password = isset($options['PASSWORD']) ? $options['PASSWORD'] : 'tiger';
./include/adodb/datadict/datadict-oci8.inc.php:		$sql[] = "CREATE USER ".$dbname." IDENTIFIED BY ".$password.$tablespace;
./include/adodb/README.md:$db->Connect($server, $user, $password, $database);
./include/adodb/drivers/adodb-postgres64.inc.php:	// 	$db->Connect("host=host1 user=user1 password=secret port=4341");
./include/adodb/drivers/adodb-postgres64.inc.php:			if ($pwd)  $str .= " password=".$pwd;
./include/adodb/drivers/adodb-postgres64.inc.php:		//if ($user) $linea = "user=$user host=$linea password=$pwd dbname=$db port=5432";
./include/adodb/drivers/adodb-postgres64.inc.php:	// 	$db->PConnect("host=host1 user=user1 password=secret port=4341");
./include/adodb/drivers/adodb-ldap.inc.php:	var $password = false;
./include/adodb/drivers/adodb-ldap.inc.php:	function _connect( $host, $username, $password, $ldapbase)
./include/adodb/drivers/adodb-ldap.inc.php:			$bind = @ldap_bind( $this->_connectionID, $username, $password );
./include/adodb/tohtml.inc.php://	$db->Connect('mysql','userid','password','database');
./include/adodb/adodb-pear.inc.php:		if($persist) $ok = $obj->PConnect($dsninfo['hostspec'], $dsninfo['username'],$dsninfo['password'],$dsninfo['database']);
./include/adodb/adodb-pear.inc.php:		else  $ok = $obj->Connect($dsninfo['hostspec'], $dsninfo['username'],$dsninfo['password'],$dsninfo['database']);
./include/adodb/adodb-pear.inc.php:	 *  password: Password for login
./include/adodb/adodb-pear.inc.php:	 *  phptype(dbsyntax)://username:password@protocol+hostspec/database
./include/adodb/adodb-pear.inc.php:	 *  phptype://username:password@protocol+hostspec:110//usr/db_file.db
./include/adodb/adodb-pear.inc.php:	 *  phptype://username:password@hostspec/database_name
./include/adodb/adodb-pear.inc.php:	 *  phptype://username:password@hostspec
./include/adodb/adodb-pear.inc.php:			'password' => false
./include/adodb/adodb-pear.inc.php:		// Get (if found): username and password
./include/adodb/adodb-pear.inc.php:		// $dsn => username:password@protocol+hostspec/database
./include/adodb/adodb-pear.inc.php:				$parsed['password'] = urldecode(substr($str, $pos + 1));
./include/adodb/adodb.inc.php:	var $password = '';			/// Password for the username. For security, we no longer store it.
./include/adodb/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb/adodb.inc.php:			$this->password = 'not stored'; // not stored for security reasons
./include/adodb/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb/adodb.inc.php:	 * @param [argPassword]		Associated password
./include/adodb/adodb.inc.php:			$this->password = 'not stored';
./include/adodb/adodb.inc.php:	 *  password: Password for login
./include/functions_auth.inc.php: * Authenticates the username/password supplied against
./include/functions_auth.inc.php:function get_authentication($login_name='', $login_password='') {
./include/functions_auth.inc.php:    $authresult = $auth->checkPass($login_name,$login_password);
./include/functions_auth.inc.php:            $authresult = $auth->checkPass($login_name,$login_password);
./include/functions_auth.inc.php:    // If the password is good.. return success.
./include/functions_auth.inc.php: * Encrypts a password using the given method and salt
./include/functions_auth.inc.php: *   mysql - MySQL password (old method)
./include/functions_auth.inc.php: *   my411 - MySQL 4.1.1 password
./include/functions_auth.inc.php: * @return  string  The crypted password
./include/functions_auth.inc.php: * Verifies a cleartext password against a crypted hash
./include/functions_auth.inc.php: * then the clear text password is crypted using the same method. If both hashs
./include/auth/ldap.class.php:     * Check user+password
./include/auth/ldap.class.php:     * plaintext password is correct by trying to bind
./include/auth/ldap.class.php:        // reject empty password
./include/auth/local.class.php:   * Check user+password [ MUST BE OVERRIDDEN ]
./include/auth/local.class.php:   * password is correct
./include/auth/local.class.php:   *     found user should be set if we find the user even if the password does not match
./include/auth/local.class.php:            // check that the password is the same.
./include/auth/local.class.php:            if($md5pass === $user['password']) {
./login.php:            <input id="onapassword" type="hidden" name="onapassword">
./login.php:                            style="width: 100px; font-size: 8pt;" type="password" maxlength="64" tabindex="2" accesskey="p"
./login.php:                                onClick="el('onapassword').value = el('getpass').value;
./modules/mysql_purge_logs.inc.php:    password=STRING           mysql password (default: blank)
./modules/mysql_purge_logs.inc.php:        printmsg("DEBUG => Connect to slave host mysql://{$options['user']}:{$options['password']}@{$slave_host}", 4);
./modules/mysql_purge_logs.inc.php:        $dbh = db_connect('mysql', $slave_host, $options['user'], $options['password'], 'mysql');
./modules/mysql_purge_logs.inc.php:            $dbh = db_connect('mysql', $host, $options['user'], $options['password'], 'mysql');
./modules/mysql_purge_logs.inc.php://    $pass     = password (if any) to go with user id
./winc/user_edit.inc.php:                    type="password"
./winc/user_edit.inc.php:        $js .= "alert('Error! A password is required to create a new employee!');";
./winc/user_edit.inc.php:    // md5sum the password if there is one
./winc/menu_control.inc.php: />&nbsp;User info/Change password</div>
./winc/tooltips.inc.php:    <input id="onapassword" type="hidden" name="onapassword">
./winc/tooltips.inc.php:            <input id="getpass" class="edit" autocomplete="off" name="getpass" type="password" size="12" onkeypress="if (event.keyCode == 13) { el('loginbutton').click(); }">
./winc/tooltips.inc.php:                    onClick="el('onapassword').value = el('getpass').value;
./winc/tooltips.inc.php:    list($status, $js) = get_authentication($form['onausername'],$form['onapassword']);
./winc/app_user_info.inc.php:                Old password:
./winc/app_user_info.inc.php:                    type="password"
./winc/app_user_info.inc.php:                New password:
./winc/app_user_info.inc.php:                    type="password"
./winc/app_user_info.inc.php:                    type="password"
./winc/app_user_info.inc.php:                                 xajax_window_submit('{$window_name}', xajax.getFormValues('passchange_form'), 'change_user_password');"
./winc/app_user_info.inc.php:function ws_change_user_password($window_name, $form) {
./winc/app_user_info.inc.php:    if ($user['password'] != $form['old']) {
./winc/app_user_info.inc.php:        $js = "el('passchangemsg').innerHTML = 'New passwords dont match.';";
./winc/app_user_info.inc.php:            'password' => $form['new2']
./winc/app_user_edit.inc.php:    <input id="password" type="hidden" name="password" value="{$user['password']}">
./winc/app_user_edit.inc.php:                    type="password"
./winc/app_user_edit.inc.php:                    onClick="if (el('pass').value != '') { el('password').value = make_md5(el('pass').value); } xajax_window_submit('{$window_name}', xajax.getFormValues('user_edit_form'), 'save');"
./winc/app_user_edit.inc.php:                'password' => $form['password'],
./winc/app_user_edit.inc.php:                'password' => $form['password'],
